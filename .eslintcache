[{"/mnt/c/Users/Franc/documents/meet/src/index.js":"1","/mnt/c/Users/Franc/documents/meet/src/App.js":"2","/mnt/c/Users/Franc/documents/meet/src/reportWebVitals.js":"3","/mnt/c/users/franc/documents/meet/src/index.js":"4","/mnt/c/users/franc/documents/meet/src/reportWebVitals.js":"5","/mnt/c/users/franc/documents/meet/src/App.js":"6","/mnt/c/users/franc/documents/meet/src/NumberOfEvents.js":"7","/mnt/c/users/franc/documents/meet/src/CitySearch.js":"8","/mnt/c/users/franc/documents/meet/src/api.js":"9","/mnt/c/users/franc/documents/meet/src/EventList.js":"10","/mnt/c/users/franc/documents/meet/src/mock-data.js":"11","/mnt/c/users/franc/documents/meet/src/Event.js":"12"},{"size":500,"mtime":1611721997059,"results":"13","hashOfConfig":"14"},{"size":528,"mtime":1611721997045,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1611721997069,"results":"16","hashOfConfig":"14"},{"size":500,"mtime":1612575107888,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1612575107936,"results":"19","hashOfConfig":"18"},{"size":2201,"mtime":1612846666697,"results":"20","hashOfConfig":"18"},{"size":682,"mtime":1612847010282,"results":"21","hashOfConfig":"18"},{"size":1630,"mtime":1612814852428,"results":"22","hashOfConfig":"18"},{"size":3139,"mtime":1612823263799,"results":"23","hashOfConfig":"18"},{"size":433,"mtime":1612575107793,"results":"24","hashOfConfig":"18"},{"size":3403,"mtime":1612735524016,"results":"25","hashOfConfig":"18"},{"size":1474,"mtime":1612628705879,"results":"26","hashOfConfig":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ib8nnq",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1bzzdzs",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/mnt/c/Users/Franc/documents/meet/src/index.js",[],"/mnt/c/Users/Franc/documents/meet/src/App.js",[],"/mnt/c/Users/Franc/documents/meet/src/reportWebVitals.js",[],"/mnt/c/users/franc/documents/meet/src/index.js",[],["53","54"],"/mnt/c/users/franc/documents/meet/src/reportWebVitals.js",[],"/mnt/c/users/franc/documents/meet/src/App.js",[],"/mnt/c/users/franc/documents/meet/src/NumberOfEvents.js",[],"/mnt/c/users/franc/documents/meet/src/CitySearch.js",[],"/mnt/c/users/franc/documents/meet/src/api.js",["55","56"],"import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\n// This function takes an events array, then uses map to create a new array with only locations.\n// It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n// The Set will remove all duplicates from the array.\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nexport const extractEvents = (events) => {\n  var extractEvents = events.map((event) => event);\n  var oneEvent = [...new Set(extractEvents)];\n  return oneEvent;\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://r79a8nn3q1.execute-api.us-west-2.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://r79a8nn3q1.execute-api.us-west-2.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://r79a8nn3q1.execute-api.us-west-2.amazonaws.com/dev/api/token' + '/' + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};","/mnt/c/users/franc/documents/meet/src/EventList.js",[],"/mnt/c/users/franc/documents/meet/src/mock-data.js",[],"/mnt/c/users/franc/documents/meet/src/Event.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":44,"column":93,"nodeType":"63","messageId":"64","endLine":44,"endColumn":94},{"ruleId":"61","severity":1,"message":"62","line":93,"column":76,"nodeType":"63","messageId":"64","endLine":93,"endColumn":77},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]